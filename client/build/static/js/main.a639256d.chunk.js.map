{"version":3,"sources":["components/data/Point.ts","components/data/Rect.ts","components/bullet.ts","components/data/Size.ts","components/data/Circle.ts","components/utils/collision.ts","components/tank/tankBase.ts","components/tank/tankPlayer.ts","components/tank/tankRobot.ts","components/game.ts","components/game-container.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Point","x","y","this","p","angle","Math","cos","sin","floatDigit","toFixed","Rect","position","rotation","size","hw","w","hh","h","rotate","add","vertexes","getVertexes","vertexesY","map","vertexesX","top","min","right","max","bottom","left","Bullet","p5","id","p0","radius","speed","isHit","offset","circle","Size","Circle","center","isRectInBound","rect1","rect2","b1","getBound","b2","getTriangleArea","pa","pb","pc","abs","Tank","config","initStatus","halfSize","speedMove","speedRotate","speedBullet","body","battleField","bullets","allowFire","debug","isLive","height","PI","width","textSize","push","fill","translate","rect","pop","drawBullets","debugInfo","forEach","text","toString","b","draw","filter","cb","rb","isCircleInBound","TankPlayer","keyIsDown","keyReleased","keyCode","stroke","TankBase","TankRobot","lastMoveTime","minMoveTime","move","Date","now","forward","randomMove","curTime","floor","random","Game","sketch","player","enemies","canvas","score","setup","setupGame","runGame","getRandTankStatus","curCanvas","document","querySelector","canvasParentId","remove","createCanvas","parent","background","length","addEnemy","et","checkIfHit","enemyCount","pbCircle","e","p1","p2","p3","p4","cp","rectArea","isCircleHitRect","GameContainer","container","useRef","useEffect","window","innerWidth","innerHeight","current","style","ref","App","className","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a639256d.chunk.js","sourcesContent":["class Point {\r\n  x: number;\r\n  y: number;\r\n  constructor(x:number, y:number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  add(p:Point):Point {\r\n    return new Point(this.x + p.x, this.y + p.y);\r\n  }\r\n\r\n  sub(p:Point):Point {\r\n    return new Point(this.x - p.x, this.y - p.y);\r\n  }\r\n\r\n  rotate(angle: number): Point {\r\n    const x1 = this.x * Math.cos(angle) - this.y * Math.sin(angle);\r\n    const y1 = this.x * Math.sin(angle) + this.y * Math.cos(angle);\r\n    return new Point(x1, y1);\r\n  }\r\n\r\n  toString(floatDigit: number): string {\r\n    return `${this.x.toFixed(floatDigit)},\\n${this.y.toFixed(floatDigit)}`;\r\n  }\r\n}\r\n\r\nexport default Point;","import Point from './Point';\r\nimport Size from './Size';\r\nimport { Bound } from './Types';\r\n\r\nclass Rect {\r\n  position: Point;\r\n  rotation: number;\r\n  size: Size;\r\n\r\n  constructor(position: Point, rotation: number, size: Size) {\r\n    this.position = position;\r\n    this.rotation = rotation;\r\n    this.size = size;\r\n  }\r\n\r\n  getVertexes():Point[] {\r\n    const hw = this.size.w / 2;\r\n    const hh = this.size.h / 2; \r\n  \r\n    return [\r\n      new Point(-hw, -hh).rotate(this.rotation).add(this.position), // top left\r\n      new Point(hw, -hh).rotate(this.rotation).add(this.position), // top right\r\n      new Point(-hw, hh).rotate(this.rotation).add(this.position), // bottom left\r\n      new Point(hw, hh).rotate(this.rotation).add(this.position) // bottom right\r\n    ];\r\n  }\r\n\r\n  getBound(): Bound {\r\n    const vertexes: Point[] = this.getVertexes();\r\n    const vertexesY: number[] = vertexes.map(p => p.y);\r\n    const vertexesX: number[] = vertexes.map(p => p.x);\r\n    return {\r\n      top: Math.min(...vertexesY),\r\n      right: Math.max(...vertexesX),\r\n      bottom: Math.max(...vertexesY),\r\n      left: Math.min(...vertexesX)\r\n    };\r\n  }\r\n}\r\n\r\nexport default Rect;","import p5 from 'p5';\r\nimport Point from './data/Point';\r\n\r\nclass Bullet {\r\n  p5: p5;\r\n  id: string;\r\n  radius: number;\r\n  position: Point;\r\n  rotation: number;\r\n  speed: number;\r\n  isHit = false;\r\n\r\n  constructor(p5: p5, id: string, p0: Point, rotation: number) {\r\n    this.p5 = p5;\r\n    this.id = id;\r\n    this.radius = 5;\r\n    this.position = new Point(p0.x, p0.y);\r\n    this.rotation = rotation;\r\n    this.speed = 10;\r\n  }\r\n\r\n  draw(): void {\r\n    const p5 = this.p5;\r\n    const offset = new Point(this.speed * Math.cos(this.rotation), this.speed * Math.sin(this.rotation));\r\n    this.position = this.position.add(offset);\r\n\r\n    p5.circle(this.position.x, this.position.y, this.radius);\r\n  }\r\n}\r\n\r\nexport default Bullet;","class Size {\r\n  // we assume w >= h;\r\n  w: number;\r\n  h: number;\r\n  constructor(w: number, h: number) {\r\n    this.w = w;\r\n    this.h = h;\r\n  }\r\n}\r\n\r\nexport default Size;","import Point from './Point';\r\nimport { Bound } from './Types';\r\n\r\nclass Circle {\r\n  center: Point;\r\n  radius: number;\r\n\r\n  constructor(center: Point, radius: number) {\r\n    this.center = center;\r\n    this.radius = radius;\r\n  }\r\n\r\n  getBound(): Bound {\r\n    return {\r\n      top: this.center.y - this.radius,\r\n      right: this.center.x + this.radius,\r\n      bottom: this.center.y + this.radius,\r\n      left: this.center.x - this.radius\r\n    };\r\n  }\r\n}\r\n\r\nexport default Circle;","import Rect from '../data/Rect';\r\nimport Circle from '../data/Circle';\r\nimport Point from '../data/Point';\r\n\r\nexport const isRectInBound = (rect1: Rect, rect2: Rect): boolean => {\r\n  const b1 = rect1.getBound();\r\n  const b2 = rect2.getBound();\r\n\r\n  return b1.top >= b2.top && b1.right <= b2.right && b1.bottom <= b2.bottom && b1.left >= b2.left;\r\n};\r\n\r\nexport const isCircleInBound = (circle: Circle, rect: Rect): boolean => {\r\n  const cb = circle.getBound();\r\n  const rb = rect.getBound();\r\n  \r\n  return cb.top >= rb.top && cb.right <= rb.right && cb.bottom <= rb.bottom && cb.left >= rb.left;\r\n};\r\n\r\nexport const getTriangleArea = (pa: Point, pb: Point, pc: Point): number => {\r\n  return Math.abs((pb.x*pa.y-pa.x*pb.y)+(pc.x*pb.y-pb.x*pc.y)+(pa.x*pc.y-pc.x*pa.y)) / 2;\r\n};\r\n\r\nexport const isCircleHitRect = (circle: Circle, rect: Rect): boolean => {\r\n  // TODO need to extend the rect because circle has radius\r\n  const [p1, p2, p3, p4] = rect.getVertexes();\r\n  const cp = circle.center;\r\n  const rectArea = rect.size.w * rect.size.h;\r\n  const area = getTriangleArea(p1, p2, cp) + getTriangleArea(p2, p3, cp) + getTriangleArea(p3, p4, cp) + getTriangleArea(p4, p1, cp);\r\n  return area <= rectArea;\r\n};\r\n","import { GameConfigType, TankStatus } from '../data/Types';\r\nimport p5 from 'p5';\r\nimport Point from '../data/Point';\r\nimport Size from '../data/Size';\r\nimport Rect from '../data/Rect';\r\nimport Circle from '../data/Circle';\r\nimport Bullet from '../bullet';\r\nimport { isCircleInBound } from '../utils/collision';\r\n\r\nclass Tank {\r\n  p5: p5;\r\n  config: GameConfigType;\r\n  size: Size;\r\n  halfSize: Size;\r\n  position: Point;\r\n  rotation: number;\r\n  speedMove: number;\r\n  speedRotate: number;\r\n  speedBullet: number;\r\n  body: Rect;\r\n  battleField: Rect;\r\n  id: string;\r\n  bullets: Bullet[];\r\n  allowFire = true;\r\n  debug: boolean;\r\n  isLive = true;\r\n  constructor(p5: p5, config: GameConfigType, id: string, initStatus?: TankStatus) {\r\n    this.p5 = p5;\r\n    this.config = config;\r\n    this.size = {w: 48, h: 32};\r\n    this.halfSize = {w: this.size.w / 2, h: this.size.h / 2};\r\n    if (initStatus) {\r\n      this.position = initStatus.position;\r\n      this.rotation = initStatus.rotation;\r\n    } else {\r\n      this.position = new Point(50, this.config.height-80);\r\n      this.rotation = 0; //0 - 2pi deg\r\n    }\r\n    this.speedMove = 2;\r\n    this.speedRotate = p5.PI/40;\r\n    this.speedBullet = 5;\r\n    this.body = new Rect(this.position, this.rotation, this.size);\r\n    this.battleField = new Rect(new Point(config.width / 2, config.height / 2), 0, new Size(config.width, config.height));\r\n    this.id = id;\r\n    this.bullets = [];\r\n    this.debug = false;\r\n  }\r\n\r\n  draw():void {\r\n    const p5 = this.p5;\r\n    p5.textSize(12);\r\n\r\n    // plot tank\r\n    p5.push();\r\n    p5.fill(255, 255, 255);\r\n    p5.translate(this.position.x, this.position.y);\r\n    p5.rotate(this.rotation);\r\n    p5.rect(-this.halfSize.w, -this.halfSize.h, this.size.w, this.size.h, 5);\r\n    p5.rect(0 , -this.halfSize.h / 4, this.size.w , this.halfSize.h / 2);\r\n\r\n    // plot debug info\r\n    p5.pop();\r\n    // plot bullets\r\n    p5.fill(255, 255, 0);\r\n    this.drawBullets();\r\n\r\n    p5.fill(0, 0, 255);\r\n    if (this.debug) {\r\n      this.debugInfo();\r\n    }\r\n  }\r\n\r\n  debugInfo(): void {\r\n    const p5 = this.p5;\r\n    const rect = new Rect(this.position, this.rotation, this.size);\r\n    const boundingP = rect.getVertexes();\r\n    boundingP.forEach(p => {\r\n      p5.text(p.toString(1), p.x, p.y);\r\n    });\r\n  }\r\n\r\n  drawBullets(): void {\r\n    this.bullets.forEach(b => {\r\n      b.draw();\r\n    });\r\n    this.bullets = this.bullets.filter(b => {\r\n      const circle = new Circle(b.position, b.radius);\r\n      return isCircleInBound(circle, this.battleField);\r\n    });\r\n  }\r\n}\r\n\r\nexport default Tank;","import Point from '../data/Point';\r\nimport Rect from '../data/Rect';\r\nimport Bullet from '../bullet';\r\nimport TankBase from './tankBase';\r\nimport { isRectInBound } from '../utils/collision';\r\n\r\nclass TankPlayer extends TankBase {\r\n  draw(): void {\r\n    const p5 = this.p5;\r\n    let rotation = this.rotation;\r\n    let position = new Point(this.position.x, this.position.y);\r\n    // w: 87, s: 83, a:65, d:68\r\n    if (p5.keyIsDown(65)) {\r\n      rotation -= this.speedRotate;\r\n    }\r\n    if (p5.keyIsDown(68)) {\r\n      rotation += this.speedRotate;\r\n    }\r\n    rotation %= 2 * p5.PI;\r\n    let speed = 0;\r\n    if (p5.keyIsDown(87)) {\r\n      speed = this.speedMove;\r\n    }\r\n    if (p5.keyIsDown(83)) {\r\n      speed = -this.speedMove;\r\n    }\r\n\r\n    rotation %= 2 * p5.PI;\r\n\r\n    const offset = new Point(speed * Math.cos(rotation), speed * Math.sin(rotation));\r\n    position = position.add(offset);\r\n\r\n    const body = new Rect(position, rotation, this.size);\r\n\r\n    if (isRectInBound(body, this.battleField)) {\r\n      this.position = position;\r\n      this.rotation = rotation;\r\n      this.body = body;\r\n    }\r\n\r\n    if (p5.keyIsDown(32) && this.allowFire) {\r\n      // fire a bullet\r\n      this.allowFire = false;\r\n      const offset = new Point(this.size.w * Math.cos(this.rotation), this.size.w * Math.sin(this.rotation));\r\n      this.bullets.push(new Bullet(this.p5, this.id, this.position.add(offset), this.rotation));\r\n    }\r\n\r\n    p5.keyReleased = () => {\r\n      if (p5.keyCode == 32) {\r\n        this.allowFire = true;\r\n      }\r\n    };\r\n    this.p5.stroke(255, 0, 0);\r\n    super.draw();\r\n  }\r\n}\r\n\r\nexport default TankPlayer;","import { GameConfigType, TankStatus, Move } from '../data/Types';\r\nimport p5 from 'p5';\r\nimport Point from '../data/Point';\r\nimport Rect from '../data/Rect';\r\nimport TankBase from './tankBase';\r\nimport { isRectInBound } from '../utils/collision';\r\n\r\nclass TankRobot extends TankBase {\r\n  lastMoveTime: number;\r\n  minMoveTime: number;\r\n  move: Move;\r\n  constructor(p5: p5, config: GameConfigType, id: string, initStatus?: TankStatus) {\r\n    super(p5, config, id, initStatus);\r\n    this.speedMove = 1;\r\n    this.speedRotate = p5.PI/80;\r\n    this.speedBullet = 2.5;\r\n    this.lastMoveTime = Date.now();\r\n    this.minMoveTime = 3000;\r\n    this.move = {\r\n      forward: 0, \r\n      rotation: 0\r\n    };\r\n  }\r\n  draw(): void {\r\n    this.randomMove();\r\n    this.p5.stroke(0, 0, 255);\r\n    super.draw();\r\n  }\r\n\r\n  randomMove(): void {\r\n    const p5 = this.p5;\r\n\r\n    const curTime = Date.now();\r\n\r\n    if (curTime < this.lastMoveTime + this.minMoveTime) {\r\n      // still less that last move, do nothing\r\n    } else {\r\n      this.lastMoveTime = curTime;\r\n      // get move status\r\n      this.move.forward = Math.floor(Math.random()*10); // 0-9\r\n      this.move.rotation = Math.floor(Math.random()*10);\r\n    }\r\n\r\n    let speed = 0;\r\n    if (this.move.forward <= 1) {\r\n      // don't move\r\n      speed = 0;\r\n    } else if (this.move.forward <= 3){\r\n      // move backword\r\n      speed = -this.speedMove;\r\n    } else {\r\n      // move forward\r\n      speed = this.speedMove;\r\n    }\r\n\r\n    let rotation = this.rotation;\r\n    if (this.move.rotation <= 1) {\r\n      // rotate left\r\n      rotation -= this.speedRotate;\r\n    } else if (this.move.rotation <= 3) {\r\n      rotation += this.speedRotate;\r\n    }\r\n\r\n    rotation %= 2 * p5.PI;\r\n\r\n    const offset = new Point(speed * Math.cos(rotation), speed * Math.sin(rotation));\r\n    let position = new Point(this.position.x, this.position.y);\r\n    position = position.add(offset);\r\n\r\n    const body = new Rect(position, rotation, this.size);\r\n\r\n    if (isRectInBound(body, this.battleField)) {\r\n      this.position = position;\r\n      this.rotation = rotation;\r\n      this.body = body;\r\n    }\r\n  }\r\n}\r\n\r\nexport default TankRobot;","import { GameConfigType } from './data/Types';\r\nimport TankPlayer from './tank/tankPlayer';\r\nimport TankRobot from './tank/tankRobot';\r\nimport p5 from 'p5';\r\nimport Point from './data/Point';\r\nimport { TankStatus } from './data/Types';\r\nimport { isCircleHitRect } from './utils/collision';\r\nimport Circle from './data/Circle';\r\n\r\nclass Game {\r\n  config: GameConfigType;\r\n  p5: p5;\r\n  sketch: p5;\r\n  player: TankPlayer;\r\n  enemies: TankRobot[];\r\n  canvas: p5.Renderer;\r\n  score: number;\r\n  constructor(config: GameConfigType) {\r\n    this.config = config;\r\n    this.p5 = new p5((sketch) => {\r\n      sketch.setup = () => {\r\n        this.setupGame(sketch);\r\n      };\r\n      sketch.draw = () => {\r\n        this.runGame();\r\n      };\r\n    });\r\n    this.player = new TankPlayer(this.p5, config, 'player', this.getRandTankStatus());\r\n    this.enemies = [];\r\n    this.score = 0;\r\n  }\r\n\r\n  setupGame(sketch: p5): void {\r\n    this.sketch = sketch;\r\n    // remove the previous canvas\r\n    const curCanvas = document.querySelector(`#${this.config.canvasParentId} canvas`);\r\n    if(curCanvas) {\r\n      curCanvas.remove();\r\n    }\r\n    this.canvas = sketch.createCanvas(this.config.width, this.config.height);\r\n    this.canvas.parent(this.config.canvasParentId);\r\n  }\r\n\r\n  runGame(): void {\r\n    //clear all canvas\r\n    this.sketch.background('#F3F3F3');\r\n    this.player.draw();\r\n\r\n    if (this.enemies.length <= 4) {\r\n      this.addEnemy();\r\n    }\r\n\r\n\r\n    this.enemies.forEach(et => {\r\n      et.draw();\r\n    });\r\n\r\n    this.checkIfHit();\r\n\r\n    const p5 = this.p5;\r\n    p5.textSize(32);\r\n    this.p5.text(`Score: ${this.score}`, 20, 40);\r\n  }\r\n\r\n  addEnemy(): void {\r\n    const enemyCount = this.enemies.length;\r\n    this.enemies.push(new TankRobot(this.p5, this.config, `robot${enemyCount}`, this.getRandTankStatus()));\r\n  }\r\n\r\n  getRandTankStatus(): TankStatus {\r\n    const randPoint = new Point(Math.random()*this.config.width, Math.random()*this.config.height);\r\n    const randStatus = {\r\n      position: randPoint,\r\n      rotation: Math.random()* 2 * this.p5.PI\r\n    };\r\n    return randStatus;\r\n  }\r\n\r\n  checkIfHit(): void {\r\n    this.player.bullets.forEach(pb => {\r\n      if (pb.isHit) {\r\n        return;\r\n      }\r\n      const pbCircle = new Circle(pb.position, pb.radius);\r\n      this.enemies.forEach(e => {\r\n        if (isCircleHitRect(pbCircle, e.body) && e.isLive) {\r\n          this.score++;\r\n          e.isLive = false;\r\n          pb.isHit = true;\r\n        }\r\n      });\r\n    });\r\n\r\n    this.enemies = this.enemies.filter(e=> e.isLive);\r\n    this.player.bullets = this.player.bullets.filter(pb => !pb.isHit);\r\n  }\r\n}\r\n\r\nexport default Game;","import React, {useEffect, useRef} from 'react';\r\nimport Game from './game';\r\nimport './game-container.scss';\r\n\r\nconst GameContainer = (): JSX.Element => {\r\n  const container = useRef<HTMLDivElement>(null);\r\n  useEffect(() => {\r\n    const width = window.innerWidth;\r\n    const height = window.innerHeight;\r\n    const current = container.current;\r\n    if (current) {\r\n      current.style.width = `${width}px`;\r\n      current.style.height = `${height}px`;\r\n    }\r\n    new Game({\r\n      width,\r\n      height,\r\n      canvasParentId: 'game-container'\r\n    });\r\n  }, []);\r\n  return <div id='game-container' ref={container}></div>;\r\n};\r\n\r\nexport default GameContainer;","import React from 'react';\r\nimport './App.css';\r\nimport GameContainer from './components/game-container';\r\n\r\nfunction App():JSX.Element {\r\n  return (\r\n    <div className=\"App\">\r\n      <GameContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any*/\r\n\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport const register = (config: any): void => {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n  // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nfunction registerValidSW(swUrl: string, config: any) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config: any) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n    (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport const unregister = (): void => {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}